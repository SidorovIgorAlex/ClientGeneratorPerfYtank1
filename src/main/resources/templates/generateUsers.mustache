<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.1"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"
          integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">
    <link rel="stylesheet" href="/statis/styles.css" type="text/css">

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"
        integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
        crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"
        integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T"
        crossorigin="anonymous"></script>
<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }

    async function postData(url = '', data = {}) {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(data) // body data type must match "Content-Type" header
        });
        return await response.json(); // parses JSON response into native JavaScript objects
    }

    async function getStatus(){
        await fetch("http://localhost:8080/status")
                .then((response) => {
                            if (response.status >= 400 && response.status < 600) {
                                throw new Error("Bad response from server");
                            }
                        return response.json();
                    }
                )
                .then(data=>{
                    document.getElementById("textArea").value = data.result;
                }).catch((error) => {
                    console.log(error)
                });
    }

    async function generateUser() {
        var nameKeyValue = document.getElementById("nameKey").value;
        var amountUsersValue = document.getElementById("amountUsers").value;
        postData("http://localhost:8080/generationUser",{amountUsers:amountUsersValue, nameKey:nameKeyValue})
                .then((response) => {
                            if (response.status >= 400 && response.status < 600) {
                                throw new Error("Bad response from server");
                            }
                            return response;
                        }
                )
                .then(data=>{
                    document.getElementById("textArea").value = data.result;
                }).catch((error) => {
            console.log(error)
        });
    }
</script>
<div>
        <div class="row tab" style="margin-left: 20px; margin-top: 20px;">
            <input  class="col-sm-2 text-primary rounded" type="text" name="nameKey" id="nameKey" placeholder="nameKey:"/>
            <input  class="col-sm-2 text-primary rounded" type="hidden" name="amountVacantSim"/>
            <input  class="col-sm-2 text-primary rounded" type="number" name="amountUsers" id="amountUsers" placeholder="amountUsers:">
            <button onclick="generateUser()" class="btn btn-outline-primary btn-sm small-width">
                Начать генерацию!
            </button>
        </div>
</div>
    <div class="row tab" style="margin-left: 20px; margin-top: 20px;">
        <button onclick="getStatus()" class="btn btn-outline-primary btn-sm small-width">
            Получить статус
        </button>
    </div>
    <div class="mb-3 tab" style="margin-left: 20px; margin-top: 20px;">
        <label for="textArea" class="form-label tab">Полученные данные</label>
        <textarea class="form-control tab" id="textArea" rows="20"></textarea>
    </div>

<!--<form method="POST" th:action="@{/generation}" th:object="${generateUsers}">

    <label for="nameKey">nameKey: </label>
    <input type="text" th:field="*{nameKey}"/>
    <br/>
    <label for="amountUsers">amountUsers: </label>
    <input type="text" th:field="*{amountUsers}"/>

    <br/>
    <input type="submit" value="Submit order"/>
</form>-->
    <script src="/scripts/scripts.js"></script>

</body>
</head>
</html>
